<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[miCookie]]></title>
  <subtitle><![CDATA[给我一个电脑，我能创造一个世界]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.micookie.net/"/>
  <updated>2016-03-01T16:15:17.541Z</updated>
  <id>http://blog.micookie.net/</id>
  
  <author>
    <name><![CDATA[miCookie]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Windows高效工具推荐]]></title>
    <link href="http://blog.micookie.net/2016/02/29/Windows%E9%AB%98%E6%95%88%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    <id>http://blog.micookie.net/2016/02/29/Windows高效工具推荐/</id>
    <published>2016-02-28T16:00:00.000Z</published>
    <updated>2016-03-01T16:15:17.541Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>要想愉快的工作开心的写代码，硬件上一个高配置的电脑是必须的，同时利用好软件也能极大的提高效率。下面介绍的几款软件是我的个人电脑必备神器，极力推荐大家去尝试一下。</p>
</blockquote>
<h1 id="1、Everything">1、Everything</h1><ul>
<li>文件快速搜索工具<br>比起龟速的window search要爽2^n倍<br><a href="http://www.iplaysoft.com/everything.html" target="_blank" rel="external">详细介绍</a><br><a href="http://www.voidtools.com/" target="_blank" rel="external">官网</a></li>
</ul>
<h1 id="2、Wox">2、Wox</h1><ul>
<li>快速启动工具<br>可以在任何地方快速打开程序，网站，查单词……支持自定义扩展<br>目前一个缺点是最新版第一次呼出响应慢。<br><a href="http://www.iplaysoft.com/wox.html" target="_blank" rel="external">详细介绍</a><br><a href="http://www.getwox.com/" target="_blank" rel="external">官网</a></li>
</ul>
<h1 id="3、_Listary">3、 Listary</h1><ul>
<li>文件快速搜索工具<br>有点和Everything类似，不同之处是Listary可以嵌入到资源管理器中的框中，在上传文件的时候可以快速搜索文件。<br><a href="http://www.iplaysoft.com/listary.html" target="_blank" rel="external">详细介绍</a><br><a href="http://www.listary.com/" target="_blank" rel="external">官网</a></li>
</ul>
<h1 id="4、ClipMate">4、ClipMate</h1><ul>
<li>剪切板历史记录<br>经常会遇到这种情况，写代码的过程中，我复制了一段代码，过一会我又复制了另外一段代码，但是我现在想粘贴我第一次复制的代码，这时候只需要按下<code>Ctrl+Alt+N</code>即可实现。另外还有众多功能待你探索。<br><a href="http://www.thornsoft.com/" target="_blank" rel="external">官网</a></li>
</ul>
<h1 id="5、软媒时间">5、软媒时间</h1><ul>
<li>一款及其方便的日期查看，天气，记事，提醒工具。替换windows任务栏右下角的时间框。<br><a href="http://sj.ruanmei.com/" target="_blank" rel="external">官网</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>要想愉快的工作开心的写代码，硬件上一个高配置的电脑是必须的，同时利用好软件也能极大的提高效率。下面介绍的几款软件是我的个人电脑必备神器，极力推荐大家去尝试一下。</p>
</blockquote>
<h1 id="1、Everything">1、E]]>
    </summary>
    
      <category term="效率" scheme="http://blog.micookie.net/tags/%E6%95%88%E7%8E%87/"/>
    
      <category term="运维" scheme="http://blog.micookie.net/categories/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android清空照片数据库缓存]]></title>
    <link href="http://blog.micookie.net/2015/11/01/Android%E5%AA%92%E4%BD%93%E5%BA%93%E6%9B%B4%E6%96%B0/"/>
    <id>http://blog.micookie.net/2015/11/01/Android媒体库更新/</id>
    <published>2015-11-01T09:59:41.000Z</published>
    <updated>2016-03-01T16:09:40.541Z</updated>
    <content type="html"><![CDATA[<p>一个项目中需要删除相册下的照片，直接通过Java的File类删除的，删除的时候并不会通知Android的媒体库进行更新数据库，从而导致系统图库的缓存中仍然有照片，但实际文件并不存在。<br>数据库位置<code>/data/data/com.android.providers.media/</code>下的数据库，root后的手机可以通过RE管理的查看，image表中。</p>
<p>如下代码可以实现清理数据库的功能。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">clearMediaDatabase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	String[] projection = &#123; MediaStore.Images.Media._ID, MediaStore.Images.Media.DATA, MediaStore.Images.ImageColumns.DATA &#125;;</span><br><span class="line">	ContentResolver cr = <span class="keyword">this</span>.getContentResolver();</span><br><span class="line">	Cursor imageCursor = cr.query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, projection, <span class="keyword">null</span>, <span class="keyword">null</span>, MediaStore.Images.Media._ID);</span><br><span class="line">	<span class="keyword">int</span> count = imageCursor.getCount();</span><br><span class="line">	<span class="keyword">int</span> image_column_index = imageCursor.getColumnIndex(MediaStore.Images.Media._ID);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">		imageCursor.moveToPosition(i);</span><br><span class="line">		<span class="keyword">int</span> id = imageCursor.getInt(image_column_index);</span><br><span class="line">           cr.delete(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, MediaStore.Images.Media._ID + <span class="string">"=?"</span>, <span class="keyword">new</span> String[]&#123; Long.toString(id) &#125; );</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>后期优化：上述功能是清空照片数据库，可以针对某一张图片的记录进行删除处理。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一个项目中需要删除相册下的照片，直接通过Java的File类删除的，删除的时候并不会通知Android的媒体库进行更新数据库，从而导致系统图库的缓存中仍然有照片，但实际文件并不存在。<br>数据库位置<code>/data/data/com.android.provider]]>
    </summary>
    
      <category term="Android" scheme="http://blog.micookie.net/tags/Android/"/>
    
      <category term="Adroid" scheme="http://blog.micookie.net/categories/Adroid/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[java.lang.NoClassDefFoundError]]></title>
    <link href="http://blog.micookie.net/2015/10/28/java.lang.NoClassDefFoundError/"/>
    <id>http://blog.micookie.net/2015/10/28/java.lang.NoClassDefFoundError/</id>
    <published>2015-10-28T13:53:10.000Z</published>
    <updated>2016-02-28T05:25:29.442Z</updated>
    <content type="html"><![CDATA[<p>一个项目中要实现查看手机自定义文件夹下的照片功能，于是在github找到了<a href="https://github.com/likebamboo/ImageChooser" target="_blank" rel="external">ImageChooser</a>这个项目，但是我导入到Eclipse之后，出现了编译，安装成功，在手机运行的时候报如下错误：</p>
<pre><code>java.lang.NoClassDefFoundError: Failed   resolution of:Lcom/nostra13/universalimageloader/core/ImageLoaderConfiguration<span class="variable">$Builder</span>;
</code></pre><a id="more"></a>
<p>universalimageloader是该程序中用的一个jar包，不知道为何前边为Lcom，感觉应该是com才对。</p>
<p>然后把项目导入到AndroidStudio中发现编译后的apk是可以正常使用的说明源码没问题。</p>
<p>折腾了好久无奈，发给朋友他在Eclipse下，编译后是没问题的，于是让他把他的项目打包发给我，我导入后发现也正常了。</p>
<p>只好用Beyond Compare来比较我的项目和他的项目文件的区别，发现唯一的区别在项目根目录下的<code>.classpath</code>文件</p>
<p>不正常的：</p>
<pre><code><span class="tag">&lt;<span class="title">classpathentry</span> <span class="attribute">kind</span>=<span class="value">"con"</span> <span class="attribute">path</span>=<span class="value">"com.android.ide.eclipse.adt.LIBRARIES"</span>&gt;</span>
</code></pre><p>正常运行的：</p>
<pre><code><span class="tag">&lt;<span class="title">classpathentry</span> <span class="attribute">kind</span>=<span class="value">"con"</span> <span class="attribute">exported</span>=<span class="value">"true"</span> <span class="attribute">path</span>=<span class="value">"com.android.ide.eclipse.adt.LIBRARIES"</span>&gt;</span>
</code></pre><p>就是这个参数的问题 <code>exported=&quot;true&quot;</code> 表示是否允许调用libs的jar包。<br>貌似是我adt版本的导致碰到这个问题。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一个项目中要实现查看手机自定义文件夹下的照片功能，于是在github找到了<a href="https://github.com/likebamboo/ImageChooser">ImageChooser</a>这个项目，但是我导入到Eclipse之后，出现了编译，安装成功，在手机运行的时候报如下错误：</p>
<pre><code>java.lang.NoClassDefFoundError: Failed   resolution of:Lcom/nostra13/universalimageloader/core/ImageLoaderConfiguration<span class="variable">$Builder</span>;
</code></pre>]]>
    
    </summary>
    
      <category term="Android" scheme="http://blog.micookie.net/tags/Android/"/>
    
      <category term="Adroid" scheme="http://blog.micookie.net/categories/Adroid/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于Android拍照总结]]></title>
    <link href="http://blog.micookie.net/2015/10/22/%E5%85%B3%E4%BA%8EAndroid%E6%8B%8D%E7%85%A7%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.micookie.net/2015/10/22/关于Android拍照总结/</id>
    <published>2015-10-22T15:08:10.000Z</published>
    <updated>2016-02-28T05:25:01.226Z</updated>
    <content type="html"><![CDATA[<p>网上搜拍照程序千篇一律，倒是都能正常的使用，但是很多问题存在，比如说拍照模糊……但是有人留言但是博主又不回复，总结了一下有这两种情况分别说明一下。</p>
<h3 id="第一种通过URI_putextra">第一种通过URI  putextra</h3><pre><code>如果采用这种<span class="type">ResultActivity</span>中返回的<span class="typedef"><span class="keyword">data</span>为</span>
</code></pre><h3 id="第二种通过Intent">第二种通过Intent</h3><pre><code>其实是缩略图


待续。。。
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>网上搜拍照程序千篇一律，倒是都能正常的使用，但是很多问题存在，比如说拍照模糊……但是有人留言但是博主又不回复，总结了一下有这两种情况分别说明一下。</p>
<h3 id="第一种通过URI_putextra">第一种通过URI  putextra</h3><pre><cod]]>
    </summary>
    
      <category term="Android" scheme="http://blog.micookie.net/tags/Android/"/>
    
      <category term="拍照" scheme="http://blog.micookie.net/tags/%E6%8B%8D%E7%85%A7/"/>
    
      <category term="Adroid" scheme="http://blog.micookie.net/categories/Adroid/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo添加RSS、Sitemap]]></title>
    <link href="http://blog.micookie.net/2015/10/20/Hexo%E6%B7%BB%E5%8A%A0RSS%E3%80%81Sitemap/"/>
    <id>http://blog.micookie.net/2015/10/20/Hexo添加RSS、Sitemap/</id>
    <published>2015-10-19T16:34:51.000Z</published>
    <updated>2016-02-28T05:25:25.095Z</updated>
    <content type="html"><![CDATA[<h2 id="折腾">折腾</h2><p>在网上搜索了一堆关于Hexo安装RSS、Sitemap插件，</p>
<pre><code>$ npm <span class="keyword">install</span> hexo-generator-feed 
$ npm <span class="keyword">install</span> hexo-generator-sitemap
</code></pre><p>但是我安装上之后始终还是显示：</p>
<pre><code><span class="label">Cannot</span> <span class="preprocessor">GET</span> /atom.xml
<span class="label">Cannot</span> <span class="preprocessor">GET</span> /sitemap.xml
</code></pre><a id="more"></a>
<p>有的教程还让在_config.yml文件中加入</p>
<pre><code>plugins:
-<span class="ruby"> hexo-generator-feed
</span>-<span class="ruby"> hexo-generator-sitemap  </span>
</code></pre><p>并没有任何效果，折腾了一晚上。<br>后来去Hexo插件官网看了下，安装的时候需要加上  <code>- -save</code>参数。</p>
<h2 id="意外收获">意外收获</h2><p>顺便简单看了下Hexo插件的位置，插件储存目录在<code>node_modules</code>下，如果要卸载插件的话执行 </p>
<pre><code>npm <span class="operator"><span class="keyword">uninstall</span> 包名 <span class="comment">--save</span></span>
</code></pre><p>并且在根目录下有个    <code>package.json</code> - -save参数就是将插件信息写入到这个配置文件中。</p>
<p>Hexo启动的会读取<code>package.json</code> 中的插件列表。 </p>
<p>之前的不能正常使用正是因为没有加上这个参数。卸载的时候同理 - - save，会删掉json的一条记录。</p>
<h2 id="正确之路">正确之路</h2><p><a href="https://hexo.io/plugins/" target="_blank" rel="external">https://hexo.io/plugins/</a></p>
<h2 id="1、hexo-generator-sitemap安装"><strong>1、hexo-generator-sitemap安装</strong></h2><h3 id="Install">Install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>
<ul>
<li>Hexo 3: 1.x</li>
<li>Hexo 2: 0.x<h3 id="Options">Options</h3>在 <code>_config.yml</code>.文件中添加</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sitemap:&#10;    path: sitemap.xml</span><br></pre></td></tr></table></figure>
<h2 id="2、hexo-generator-feed安装"><strong>2、hexo-generator-feed安装</strong></h2><h3 id="Install-1">Install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<ul>
<li>Hexo 3: 1.x</li>
<li><p>Hexo 2: 0.x</p>
<h3 id="Options-1">Options</h3><p>在 <code>_config.yml</code>文件中添加</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feed:&#10;  type: atom&#10;  path: atom.xml&#10;  limit: 20</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>type</strong> - Feed type. (atom/rss2)</p>
</li>
<li><strong>path</strong> - Feed path. (Default: atom.xml/rss2.xml)</li>
<li><strong>limit</strong> - Maximum number of posts in the feed (Use <code>0</code> or <code>false</code> to show all posts)</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="折腾">折腾</h2><p>在网上搜索了一堆关于Hexo安装RSS、Sitemap插件，</p>
<pre><code>$ npm <span class="keyword">install</span> hexo-generator-feed 
$ npm <span class="keyword">install</span> hexo-generator-sitemap
</code></pre><p>但是我安装上之后始终还是显示：</p>
<pre><code><span class="label">Cannot</span> <span class="preprocessor">GET</span> /atom.xml
<span class="label">Cannot</span> <span class="preprocessor">GET</span> /sitemap.xml
</code></pre>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://blog.micookie.net/tags/hexo/"/>
    
      <category term="Hexo" scheme="http://blog.micookie.net/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Eclipse中启动Genymotion报错]]></title>
    <link href="http://blog.micookie.net/2015/10/07/Eclipse%E4%B8%AD%E5%90%AF%E5%8A%A8Genymotion%E6%8A%A5%E9%94%99/"/>
    <id>http://blog.micookie.net/2015/10/07/Eclipse中启动Genymotion报错/</id>
    <published>2015-10-07T13:15:10.000Z</published>
    <updated>2015-10-22T16:16:31.286Z</updated>
    <content type="html"><![CDATA[<h3 id="Eclipse装好Genymotion后点击启动按钮报如下错误">Eclipse装好Genymotion后点击启动按钮报如下错误</h3><pre><code>Output file: C:<span class="command">\Users</span><span class="command">\Administrator</span><span class="command">\.</span>genymotion-eclipse.log
Loading Genymotion library
Genymotion directory: C:<span class="command">\Program</span> Files<span class="command">\Genymobile</span><span class="command">\Genymotion</span>
Trying to initialize engine
Exception (VBoxManage): java.io.IOException: Cannot run program 
"C:<span class="command">\Program</span> Files<span class="command">\Genymobile</span><span class="command">\Genymotion</span><span class="command">\/</span>reg": CreateProcess error=2, 
系统找不到指定的文件。
Initialize Engine: failed
</code></pre><p>是因为2.5.4版本的Genymotion没有提供reg.exe文件导致无法启动，可以安装2.5.3版本解决<br>2.5.3官方下载地址：<a href="http://files2.genymotion.com/genymotion/genymotion-2.5.3/genymotion-2.5.3.exe" target="_blank" rel="external">http://files2.genymotion.com/genymotion/genymotion-2.5.3/genymotion-2.5.3.exe</a><br>或者下载CSDN上传的包（通过2.5.3提取）<a href="http://download.csdn.net/detail/hdjdcyl/9161681" target="_blank" rel="external">http://download.csdn.net/detail/hdjdcyl/9161681</a>  复制到Genymotion的安装目录即可。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Eclipse装好Genymotion后点击启动按钮报如下错误">Eclipse装好Genymotion后点击启动按钮报如下错误</h3><pre><code>Output file: C:<span class="command">\Users</span><s]]>
    </summary>
    
      <category term="Android" scheme="http://blog.micookie.net/tags/Android/"/>
    
      <category term="Android" scheme="http://blog.micookie.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mysql开启日常日志genneral]]></title>
    <link href="http://blog.micookie.net/2015/05/04/mysql%E5%BC%80%E5%90%AF%E6%97%A5%E5%B8%B8%E6%97%A5%E5%BF%97/"/>
    <id>http://blog.micookie.net/2015/05/04/mysql开启日常日志/</id>
    <published>2015-05-03T16:00:00.000Z</published>
    <updated>2016-02-28T05:20:53.939Z</updated>
    <content type="html"><![CDATA[<p>mysql的general日志会记录所有sql语句的执行，考虑到性能问题，生产环境下不应开启。对于开发过程中开启general log可以分析sql语句的性能问题，比较方便。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;<span class="keyword">set</span> <span class="keyword">global</span> log_output=<span class="keyword">file</span>;</span><br><span class="line"><span class="keyword">Query</span> OK, 0 rows affected (0.00 sec)</span><br><span class="line">设置general <span class="keyword">log</span>的日志文件路径：</span><br><span class="line">mysql&gt;<span class="keyword">set</span> <span class="keyword">global</span> general_log_file=<span class="string">"/tmp/general.log"</span>;</span><br><span class="line"><span class="keyword">Query</span> OK, 0 rows affected (0.00 sec)</span><br><span class="line"> 开启general <span class="keyword">log</span>：</span><br><span class="line">mysql&gt;<span class="keyword">set</span> <span class="keyword">global</span> general_log=<span class="keyword">on</span>;</span><br><span class="line"><span class="keyword">Query</span> OK, 0 rows affected (0.02 sec)</span><br><span class="line">过一段时间后，关闭general <span class="keyword">log</span>：</span><br><span class="line">mysql&gt;<span class="keyword">set</span> <span class="keyword">global</span> general_log=off;</span><br><span class="line"><span class="keyword">Query</span> OK, 0 rows affected (0.02 sec)</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>mysql的general日志会记录所有sql语句的执行，考虑到性能问题，生产环境下不应开启。对于开发过程中开启general log可以分析sql语句的性能问题，比较方便。</p>
<figure class="highlight stata"><table><tr><t]]>
    </summary>
    
      <category term="mysql" scheme="http://blog.micookie.net/tags/mysql/"/>
    
      <category term="mysql" scheme="http://blog.micookie.net/categories/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux中的alias使用]]></title>
    <link href="http://blog.micookie.net/2015/04/22/Linux%E4%B8%AD%E7%9A%84alias%E4%BD%BF%E7%94%A8/"/>
    <id>http://blog.micookie.net/2015/04/22/Linux中的alias使用/</id>
    <published>2015-04-22T07:08:10.000Z</published>
    <updated>2015-10-22T16:18:04.883Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2><p>  <code>alias</code>即别名的意思。<br>  举个栗子：比如说在Windows中查看ip是ipconfig，而Linux中是ifconfig，这样我们就可以设置一个ifconfig的别名为ipconfig，这样Linux中ipconfig就也实现ifconfig的功能了。<br>  在终端中键入alias，可查看当前系统中启用的alias。<br>![显示系统中启用的alias][1]<br>  <code>（PS：以前在用Centos和Ubuntu的时候就发现，在Centos中ll命令可以替代ls -l 然而在Ubuntu中不能使用，其实就是Centos中默认开启的ll的别名为ls -l）</code><br><a id="more"></a></p>
<h2 id="alias存放位置">alias存放位置</h2><p>alias是在用户文件夹的配置文件下的.bashrc。</p>
<pre><code><span class="title">vi</span> ~/.bashrc
</code></pre><p>![alias配置文件]</p>
<h2 id="alias语法规则">alias语法规则</h2><p>alias的语法规则很简洁，查看下配置文件一目了然，如上图。</p>
<pre><code><span class="built_in">alias</span> 别名命令=<span class="string">'真实命令'</span>
<span class="comment">#是注释</span>
</code></pre><h2 id="如何生效">如何生效</h2><p>.bashrc文件是Linux的配置文件，修改之后不能需要重新加载才能生效。1、重启2、使用source重新加载</p>
<pre><code><span class="built_in">source</span> ~/.bashrc
</code></pre><p>即可。</p>
<p> 快去亲自尝试一下吧。。。<br> <code>PS：我们可以将自己习惯的配置文件上传到github维护，如果以后更换电脑，可以很方便的取下来。</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2><p>  <code>alias</code>即别名的意思。<br>  举个栗子：比如说在Windows中查看ip是ipconfig，而Linux中是ifconfig，这样我们就可以设置一个ifconfig的别名为ipconfig，这样Linux中ipconfig就也实现ifconfig的功能了。<br>  在终端中键入alias，可查看当前系统中启用的alias。<br>![显示系统中启用的alias][1]<br>  <code>（PS：以前在用Centos和Ubuntu的时候就发现，在Centos中ll命令可以替代ls -l 然而在Ubuntu中不能使用，其实就是Centos中默认开启的ll的别名为ls -l）</code><br>]]>
    
    </summary>
    
      <category term="linux" scheme="http://blog.micookie.net/tags/linux/"/>
    
      <category term="效率" scheme="http://blog.micookie.net/tags/%E6%95%88%E7%8E%87/"/>
    
      <category term="运维" scheme="http://blog.micookie.net/categories/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Zend加载多个license]]></title>
    <link href="http://blog.micookie.net/2015/03/25/Zend%E5%8A%A0%E8%BD%BD%E5%A4%9A%E4%B8%AAlicense/"/>
    <id>http://blog.micookie.net/2015/03/25/Zend加载多个license/</id>
    <published>2015-03-24T16:00:00.000Z</published>
    <updated>2016-02-28T05:24:23.590Z</updated>
    <content type="html"><![CDATA[<p>将多个zl文件，放置到一个文件夹，然后php.ini里边配置的时候path加载这个文件夹就可以了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>将多个zl文件，放置到一个文件夹，然后php.ini里边配置的时候path加载这个文件夹就可以了。</p>
]]>
    </summary>
    
      <category term="PHP" scheme="http://blog.micookie.net/tags/PHP/"/>
    
      <category term="PHP" scheme="http://blog.micookie.net/categories/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Yii::log()和Yii::trace()，日志的使用]]></title>
    <link href="http://blog.micookie.net/2014/11/07/Yii%E6%97%A5%E5%BF%97%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://blog.micookie.net/2014/11/07/Yii日志的使用/</id>
    <published>2014-11-06T16:00:00.000Z</published>
    <updated>2016-02-28T05:23:38.787Z</updated>
    <content type="html"><![CDATA[<h3 id="首先在config文件中设置log">首先在config文件中设置log</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">'log'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'class'</span>=&gt;<span class="string">'CLogRouter'</span>,</span><br><span class="line">    <span class="string">'routes'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'class'</span>=&gt;<span class="string">'CFileLogRoute'</span>,<span class="comment">//这表示把日志输出到文件中，下方有详细的</span></span><br><span class="line">            <span class="string">'levels'</span>=&gt;<span class="string">'error, warning'</span>,</span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'class'</span>=&gt;<span class="string">'CWebLogRoute'</span>,<span class="comment">//这表示把日志显示在网页下方，下方有详细的</span></span><br><span class="line">            <span class="string">'levels'</span>=&gt;<span class="string">'trace, info, error, warning'</span>,</span><br><span class="line">            <span class="string">'categories'</span>=&gt;<span class="string">'cool.*,system.db.*'</span>,</span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure>
<h3 id="日志路由class：">日志路由class：</h3><p>CDbLogRoute: 将信息保存到数据库的表中。<br>CEmailLogRoute: 发送信息到指定的 Email 地址。<br>CFileLogRoute: 保存信息到应用程序 runtime 目录中的一个文件中。<br>CWebLogRoute: 将 信息 显示在当前页面的底部。<br>CProfileLogRoute: 在页面的底部显示概述（profiling）信息。</p>
<h3 id="信息级别levels：">信息级别levels：</h3><p>trace: 这是在 Yii::trace 中使用的级别。它用于在开发中 跟踪程序的执行流程。<br>info: 这个用于记录普通的信息。<br>profile: 这个是性能概述（profile）。下面马上会有更详细的说明。<br>warning: 这个用于警告（warning）信息。<br>error: 这个用于致命错误（fatal error）信息。</p>
<h3 id="分类categories：">分类categories：</h3><p>可以自定义，但在输出函数里要对应才会被写入日志里<br>（例如上边写的是 cool.<em> 和 system.db.</em> ，就会把相应分类的信息写入日志，请结合下文来理解）</p>
<p>设置完了，就可以用写入日志的函数来记录了：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">Yii</span>::<span class="function">trace</span>(<span class="string">'My log message.'</span>,<span class="string">'cool.pd'</span>);</span><br><span class="line"><span class="comment">//cool.pd属于cool.*分类，所以会被写入日志</span></span><br><span class="line"><span class="attribute">Yii</span>::<span class="function">log</span>(<span class="string">'My log message.'</span>,<span class="string">'info'</span>,<span class="string">'cool.collectpd'</span>);</span><br><span class="line"><span class="comment">//log定义级别为info，结合上文，第一个logclass会忽略，不会被写入文件，但会被第二个logclass接收，写入日志在网络下方显示。</span></span><br></pre></td></tr></table></figure></p>
<p>trace()和log()的区别：<br>trace()只会在调试模式下生效，即开启debug的时候<br>trace()不分level，但log()能设置levels参数</p>
<p>更详细可参考官方文件：<a href="http://www.yiiframework.com/doc/guide/1.1/zh_cn/topics.logging" target="_blank" rel="external">http://www.yiiframework.com/doc/guide/1.1/zh_cn/topics.logging</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="首先在config文件中设置log">首先在config文件中设置log</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span]]>
    </summary>
    
      <category term="PHP" scheme="http://blog.micookie.net/tags/PHP/"/>
    
      <category term="Yii" scheme="http://blog.micookie.net/tags/Yii/"/>
    
      <category term="PHP" scheme="http://blog.micookie.net/categories/PHP/"/>
    
  </entry>
  
</feed>
